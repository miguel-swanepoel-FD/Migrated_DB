trigger:
  branches:
    include:
      - main

stages:
  - stage: Build
    displayName: "Build Solution"
    jobs:
      - job: BuildJob
        steps:
          - task: VSBuild@1
            inputs:
              solution: '**/*.sln'
              msbuildArgs: '/p:Configuration=Release'
          - task: CopyFiles@2
            inputs:
              contents: '**/*.dacpac'
              targetFolder: '$(Build.ArtifactStagingDirectory)'
          - task: PublishBuildArtifacts@1
            inputs:
              pathToPublish: '$(Build.ArtifactStagingDirectory)'
              artifactName: 'drop'

  - stage: DeployToDev
    displayName: "Deploy to Dev"
    dependsOn: Build
    jobs:
      - deployment: DeployToDevJob
        environment: "Dev"  # Specify the Dev environment for deployment
        strategy:
          runOnce:
            deploy:
              steps:
                - task: SqlAzureDacpacDeployment@1
                  inputs:
                    azureSubscription: "<Your-Azure-Service-Connection>"
                    ServerName: "<Your-SQL-Server-Dev-Name>"
                    DatabaseName: "<Your-Dev-Database-Name>"
                    SqlUsername: "<Your-SQL-Username>"
                    SqlPassword: "$(SQLPassword)" # Stored as a secret variable
                    DacpacFile: "$(Pipeline.Workspace)/drop/<YourDatabase>.dacpac"
                    DeployType: "DacpacTask"

  - stage: DeployToQA
    displayName: "Deploy to QA"
    dependsOn: DeployToDev
    jobs:
      - deployment: DeployToQAJob
        environment: "QA"  # Specify the QA environment for deployment
        strategy:
          runOnce:
            deploy:
              steps:
                - task: SqlAzureDacpacDeployment@1
                  inputs:
                    azureSubscription: "<Your-Azure-Service-Connection>"
                    ServerName: "<Your-SQL-Server-QA-Name>"
                    DatabaseName: "<Your-QA-Database-Name>"
                    SqlUsername: "<Your-SQL-Username>"
                    SqlPassword: "$(SQLPassword)"
                    DacpacFile: "$(Pipeline.Workspace)/drop/<YourDatabase>.dacpac"
                    DeployType: "DacpacTask"

  - stage: DeployToProd
    displayName: "Deploy to Production"
    dependsOn: DeployToQA
    jobs:
      - deployment: DeployToProdJob
        environment: "Prod"  # Specify the Prod environment for deployment
        strategy:
          runOnce:
            deploy:
              steps:
                - task: SqlAzureDacpacDeployment@1
                  inputs:
                    azureSubscription: "<Your-Azure-Service-Connection>"
                    ServerName: "<Your-SQL-Server-Prod-Name>"
                    DatabaseName: "<Your-Prod-Database-Name>"
                    SqlUsername: "<Your-SQL-Username>"
                    SqlPassword: "$(SQLPassword)"
                    DacpacFile: "$(Pipeline.Workspace)/drop/<YourDatabase>.dacpac"
                    DeployType: "DacpacTask"
